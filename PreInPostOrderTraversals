import java.lang.*;
import java.util.*;
import java.io.*;
class Node{
    int data;
    Node right;
    Node left;
    Node(int x){
        this.data=x;
        this.left=null;
        this.right=null;
    }  
}
public class Main{
    static BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(System.out));
    static Node insert(Node root,int value) throws java.lang.Exception{
        if (root==null) {
            return new Node(value);}
        if (root.data>value)root.left=insert(root.left,value);
        else root.right=insert(root.right,value); 
        return root;
    }
    static void preorder(Node root) throws java.lang.Exception{
        if(root==null)return;
        bw.write(root.data+" ");
        preorder(root.left);
        preorder(root.right);
    }
    static void inorder(Node root) throws java.lang.Exception{
        if(root==null)return;
        inorder(root.left);
        bw.write(root.data+" ");
        inorder(root.right);
    }
    static void postorder(Node root) throws java.lang.Exception{
        if(root==null)return;
        postorder(root.left);
        postorder(root.right);
        bw.write(root.data+" ");
    }
    public static void main(String[] args) throws java.lang.Exception{
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        
        int t=Integer.parseInt(br.readLine());
        for (int i=0;i<t;i++){
            int n=Integer.parseInt(br.readLine());
            String [] x=br.readLine().split(" ");
            Node root=null;
            for (int j=0;j<n;j++){
                int value=Integer.parseInt(x[j]);
                root=insert(root,value);
            }
            preorder(root);bw.write("\n");
            inorder(root);bw.write("\n");
            postorder(root);bw.write("\n");
            bw.write("\n");
        
        }
        bw.flush();
    }
}
        
        
